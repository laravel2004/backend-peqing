// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id  Int @id @default(autoincrement())
  name String 
  email String @unique
  password String
  dosen Dosen[]
  mahasiswa Mahasiswa[]
}

model Matakuliah {
  id Int @id @default(autoincrement())
  name String
  typeNilai TypeNilai[]
}

model Mahasiswa {
  id Int @id @default(autoincrement())
  userId Int
  nrp String
  qr String
  jurusan String
  departement String
  nilai Nilai[]
  user User @relation(fields: [userId], references: [id])
  anggotaKelas AnggotaKelas[]
}

model Dosen {
  id Int @id @default(autoincrement())
  userId Int
  nip String
  user User @relation(fields: [userId], references: [id])
  subKelas SubKelas[]
}

model Kelas {
  id Int @id @default(autoincrement())
  matakuliahId Int
  name String
}

model SubKelas {
  id Int @id @default(autoincrement())
  name String
  dosenId Int
  dosen Dosen @relation(fields: [dosenId], references: [id])
  anggotaKelas AnggotaKelas[]
}



model AnggotaKelas {
  id Int @id @default(autoincrement())
  kelasId Int
  mahasiswaId Int
  subKelasId Int
  subKelas SubKelas @relation(fields: [subKelasId], references: [id])
  mahasiswa Mahasiswa @relation(fields: [mahasiswaId], references: [id])
}

model Nilai {
  id Int @id @default(autoincrement())
  nilai Int 
  grade String
  mahasiswaId Int
  typeNilaiId Int
  mahasiswa Mahasiswa @relation(fields: [mahasiswaId], references: [id])
}

model TypeNilai {
  id Int @id @default(autoincrement())
  name String
  matakuliahId Int
  matakuliah Matakuliah @relation(fields: [matakuliahId], references: [id])
}
